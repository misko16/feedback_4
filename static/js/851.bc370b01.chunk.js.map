{"version":3,"file":"static/js/851.bc370b01.chunk.js","mappings":"4MAmDA,UA5CA,WACE,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAGXE,GAAWC,EAAAA,EAAAA,MAQf,OACE,kBAAMC,UAAU,OAAOC,SAAUP,GAPlB,SAACQ,GAChBJ,GAASK,EAAAA,EAAAA,IAAcD,IACrBE,QAAQC,IAAI,2BACdV,GACD,IAGC,WACE,4BACE,kCACA,0BAAOK,UAAU,QAAQM,YAAY,mBAAsBb,EAAS,OAAQ,CAAEc,UAAU,UAE1F,4BACE,mCACA,0BAAOP,UAAU,QAAQM,YAAY,oBAAuBb,EAAS,QAAS,CAAEc,UAAU,UAE5F,4BACE,sCACA,kCACEP,UAAU,QACVM,YAAY,uBACRb,EAAS,WAAY,CAAEc,UAAU,EAAMC,UAAW,KAHxD,IAIEC,KAAK,cAENb,EAAOc,UAAqC,aAAzBd,EAAOc,SAASD,OAAuB,iBAAMT,UAAU,QAAhB,kCAC1DJ,EAAOc,UAAqC,cAAzBd,EAAOc,SAASD,OAClC,iBAAMT,UAAU,QAAhB,6DAGJ,kBAAOA,UAAU,eAAeS,KAAK,SAASE,MAAM,aAGzD,C","sources":["components/pages/RegisterPage.jsx"],"sourcesContent":["\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\n\nimport { registerThunk } from 'redux/authReduser';\n\nfunction RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\nconst dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    dispatch(registerThunk(data));\n      console.log('Registration successful');\n    reset();\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <h2>Name</h2>\n        <input className=\"input\" placeholder=\"Write your name\" {...register('name', { required: true })} />\n      </div>\n      <div>\n        <h2>Email</h2>\n        <input className=\"input\" placeholder=\"Write your email\" {...register('email', { required: true })} />\n      </div>\n      <div>\n        <h2>Password</h2>\n        <input\n          className=\"input\"\n          placeholder=\"Write your password\"\n          {...register('password', { required: true, minLength: 7 })}\n          type=\"password\"\n        />\n        {errors.password && errors.password.type === 'required' && <span className=\"error\">Password is required</span>}\n        {errors.password && errors.password.type === 'minLength' && (\n          <span className=\"error\">Password must be at least 7 characters long</span>\n        )}\n      </div>\n      <input className=\"submitButton\" type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport default RegisterPage;"],"names":["useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","className","onSubmit","data","registerThunk","console","log","placeholder","required","minLength","type","password","value"],"sourceRoot":""}