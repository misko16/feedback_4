{"version":3,"file":"static/js/545.2ed855e1.chunk.js","mappings":"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","sources":["refactoring/ContactFormRefactor.jsx","components/ContactForm.jsx","refactoring/Filter.jsx","refactoring/ContactItem.jsx","refactoring/ContactList.jsx","components/PhoneBook.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'; \n\nconst ContactFormRefactor = ({\n    handleSubmit, handleInputChange, name , number}) => {\n    return(\n        <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          placeholder=\"Enter name\"\n          required\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"[0-9]+\"\n          value={number}\n          onChange={handleInputChange}\n          placeholder=\"Enter phone number\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n}\n\nContactFormRefactor.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactFormRefactor;","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'; \n\nimport ContactFormRefactor from \"../refactoring/ContactFormRefactor\";\n\nconst ContactForm = ({ onAddContact }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !number) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n\n    onAddContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <ContactFormRefactor\n      name={name}\n      number={number}\n      handleSubmit={handleSubmit}\n      handleInputChange={handleInputChange}\n    />\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types'; \n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <input\n    className='filterInput '\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search contacts\"\n    />\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types'; \n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  const { id, name, number } = contact;\n\n  const handleDelete = () => {\n    onDeleteContact(id);\n  };\n\n  return (\n    <li className='contactItem '>\n      {name}: {number}\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  console.log('Contacts in ContactList:', contacts); \n  \n  return (\n    <ul className='contactList '>\n      {contacts.map((contact) => (\n        <ContactItem key={contact.id} contact={contact} onDeleteContact={onDeleteContact} />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"../refactoring/Filter\";\nimport ContactList from \"../refactoring/ContactList\";\nimport  { setFilter } from '../redux/appRedusers';\nimport { fetchContacts, addContact, deleteContact } from 'servises/requestFunctions';\n\n\nconst Phonebook = () => {\n  const contacts = useSelector(state => state.appReduser.contacts);\n  const filter = useSelector(state => state.appReduser.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  const handleAddContact = async (contact) => {\n    await dispatch(addContact(contact)); \n    dispatch(fetchContacts());\n  };\n\n  const handleDeleteContact = async (contactId) => {\n    await dispatch(deleteContact(contactId)); \n    dispatch(fetchContacts());\n  };\n\n  const handleFilterChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  const filteredContacts = Array.isArray(contacts.items)\n    ? contacts.items.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : [];\n\n  return (\n    <div className='container'>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} onAddContact={handleAddContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleFilterChange} />\n      <ContactList contacts={filteredContacts} onDeleteContact={handleDeleteContact} />\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n"],"names":["handleSubmit","handleInputChange","name","number","onSubmit","type","value","onChange","placeholder","required","pattern","onAddContact","useState","setName","setNumber","e","preventDefault","alert","target","className","contact","onDeleteContact","id","onClick","contacts","console","log","map","useSelector","state","appReduser","filter","dispatch","useDispatch","useEffect","fetchContacts","handleAddContact","addContact","handleDeleteContact","contactId","deleteContact","filteredContacts","Array","isArray","items","toLowerCase","includes","setFilter"],"sourceRoot":""}